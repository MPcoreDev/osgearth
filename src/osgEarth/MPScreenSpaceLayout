/* -*-c++-*- */
/* osgEarth - Geospatial SDK for OpenSceneGraph
* Copyright 2019 Pelican Mapping
* http://osgearth.org
*
* osgEarth is free software; you can redistribute it and/or modify
* it under the terms of the GNU Lesser General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
* IN THE SOFTWARE.
*
* You should have received a copy of the GNU Lesser General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>
*/
#ifndef OSGEARTH_MP_SCREEN_SPACE_LAYOUT_H
#define OSGEARTH_MP_SCREEN_SPACE_LAYOUT_H 1

#include <osgEarth/ScreenSpaceLayout>
#include <osgEarthUtil/ClipSpace>

// -----------------------------------------------------------
// This class is mainly copied from ScreenSpaceLayout
// but with performance improvements
// -----------------------------------------------------------


#define OSGEARTH_MP_SCREEN_SPACE_LAYOUT_BIN "osgearth_MPScreenSpaceLayoutBin"

namespace osgEarth
{

struct OSGEARTH_EXPORT MPScreenSpaceLayout
{
    /**
     * Assigns a stateset to the screen-space layout engine.
     * Drawables rendered while this stateset is active will be projected from
     * scene space to 2D screen space with optional decluttering.
     */
    static void activate(osg::StateSet* stateSet); //, int binNum =13);

    /**
     * Deactivates the use of the screen-space layout engine for a stateset.
     */
    static void deactivate(osg::StateSet* stateSet);

    /**
     * Enables or disables decluttering globally.
     */
    static void setDeclutteringEnabled(bool enabled);

    /**
     * Applies the provided options to the layout engine.
     */
    static void setOptions(const ScreenSpaceLayoutOptions& options);

    /**
     * Fetches the current layout options
     */
    static const ScreenSpaceLayoutOptions& getOptions();

    /**
     * True if the extension has been loaded by default through the configuration file
     */
    static bool isExtensionLoaded();

public: // advanced

    /**
     * Sets a functor to use to determine render leaf priority for declutter sorting.
     */
    static void setSortFunctor( DeclutterSortFunctor* f );

    /**
     * Clears a custom priority functor that was set using setDeclutterPriorityFunctor,
     * reverting to the default behavior (which is to sort by distance from the camera).
     */
    static void clearSortFunctor();
};

} // namespace osgEarth

#endif //OSGEARTH_MP_SCREEN_SPACE_LAYOUT_H
